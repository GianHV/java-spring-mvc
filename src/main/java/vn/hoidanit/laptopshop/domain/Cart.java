package vn.hoidanit.laptopshop.domain;

import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Min;

/**
 * Entity class that maps to the "carts" table in the database.
 * 
 * This class represents a shopping cart and provides the following functionalities:
 * 1. Maps Java objects to rows in the "carts" table for database operations.
 * 2. Tracks the total sum of items in the cart.
 * 3. Links the cart to a specific user and its associated cart details.
 */
@Entity
@Table(name = "carts")
public class Cart {

    // Primary key of the Cart entity, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    // Total sum of the cart. This field cannot be negative, validated with @Min.
    @Min(value = 0, message = "Sum must be greater than or equal to 0")
    private int sum;

    // One-to-one relationship: Each cart is associated with one user.
    // The "user_id" column in the "carts" table references the primary key in the "users" table.
    @OneToOne()
    @JoinColumn(name = "user_id")
    private User user;

    // One-to-many relationship: A cart can have multiple cart details.
    // The "mappedBy" attribute refers to the "cart" field in the CartDetail entity.
    @OneToMany(mappedBy = "cart")
    private List<CartDetail> cartDetails;

    /*
     * Gets the ID of the cart.
     * @return the ID of the cart.
     */
    public long getId() {
        return id;
    }

    /*
     * Sets the ID of the cart.
     * @param id the ID to be set for the cart.
     */
    public void setId(long id) {
        this.id = id;
    }

    /*
     * Gets the total sum of items in the cart.
     * @return the total sum of the cart.
     */
    public int getSum() {
        return sum;
    }

    /*
     * Sets the total sum of items in the cart.
     * @param sum the total sum to be set for the cart.
     */
    public void setSum(int sum) {
        this.sum = sum;
    }

    /*
     * Gets the user associated with the cart.
     * @return the user who owns the cart.
     */
    public User getUser() {
        return user;
    }

    /*
     * Sets the user for the cart.
     * @param user the user to be associated with the cart.
     */
    public void setUser(User user) {
        this.user = user;
    }

    /*
     * Gets the list of cart details associated with the cart.
     * @return the list of cart details.
     */
    public List<CartDetail> getCartDetails() {
        return cartDetails;
    }

    /*
     * Sets the list of cart details for the cart.
     * @param cartDetails the list of cart details to be set.
     */
    public void setCartDetails(List<CartDetail> cartDetails) {
        this.cartDetails = cartDetails;
    }
}
