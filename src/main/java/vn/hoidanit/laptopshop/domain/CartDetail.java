package vn.hoidanit.laptopshop.domain;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * Entity class that maps to the "cart_detail" table in the database.
 * 
 * This class represents the details of items in a shopping cart, including:
 * - The quantity of the product.
 * - The price of the product.
 * - Links to the associated cart and product entities.
 */
@Entity
@Table(name = "cart_detail")
public class CartDetail {

    // Primary key of the CartDetail entity, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    // Quantity of the product in the cart.
    private long quantity;

    // Price of the product in the cart.
    private double price;

    // Many-to-one relationship: A cart detail is linked to a single cart.
    // The "cart_id" column in the "cart_detail" table references the primary key in the "carts" table.
    @ManyToOne
    @JoinColumn(name = "cart_id")
    private Cart cart;

    // Many-to-one relationship: A cart detail is linked to a single product.
    // The "product_id" column in the "cart_detail" table references the primary key in the "products" table.
    @ManyToOne
    @JoinColumn(name = "product_id")
    private Product product;

    /*
     * Gets the ID of the cart detail.
     * @return the ID of the cart detail.
     */
    public long getId() {
        return id;
    }

    /*
     * Sets the ID of the cart detail.
     * @param id the ID to be set for the cart detail.
     */
    public void setId(long id) {
        this.id = id;
    }

    /*
     * Gets the quantity of the product in the cart detail.
     * @return the quantity of the product.
     */
    public long getQuantity() {
        return quantity;
    }

    /*
     * Sets the quantity of the product in the cart detail.
     * @param quantity the quantity to be set.
     */
    public void setQuantity(long quantity) {
        this.quantity = quantity;
    }

    /*
     * Gets the price of the product in the cart detail.
     * @return the price of the product.
     */
    public double getPrice() {
        return price;
    }

    /*
     * Sets the price of the product in the cart detail.
     * @param price the price to be set.
     */
    public void setPrice(double price) {
        this.price = price;
    }

    /*
     * Gets the cart associated with this cart detail.
     * @return the cart associated with the cart detail.
     */
    public Cart getCart() {
        return cart;
    }

    /*
     * Sets the cart for this cart detail.
     * @param cart the cart to be associated with the cart detail.
     */
    public void setCart(Cart cart) {
        this.cart = cart;
    }

    /*
     * Gets the product associated with this cart detail.
     * @return the product associated with the cart detail.
     */
    public Product getProduct() {
        return product;
    }

    /*
     * Sets the product for this cart detail.
     * @param product the product to be associated with the cart detail.
     */
    public void setProduct(Product product) {
        this.product = product;
    }
}
