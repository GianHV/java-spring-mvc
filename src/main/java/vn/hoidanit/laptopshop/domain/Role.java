package vn.hoidanit.laptopshop.domain;

import java.util.List;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

/**
 * Entity class that maps to the "roles" table in the database.
 * 
 * This class represents the "roles" table with fields and relationships defined
 * for database operations.
 */
@Entity
@Table(name = "roles")
public class Role {

    // Primary key of the Role entity, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    // Name of the role (e.g., "Admin", "User").
    private String name;

    // Description of the role.
    private String description;

    // One-to-many relationship: A role can be assigned to multiple users.
    // The "mappedBy" attribute indicates the field in the User entity that owns this relationship.
    @OneToMany(mappedBy = "role")
    private List<User> users;

    /*
     * Gets the ID of the role.
     * @return the ID of the role.
     */
    public long getId() {
        return id;
    }

    /*
     * Sets the ID of the role.
     * @param id the ID to be set for the role.
     */
    public void setId(long id) {
        this.id = id;
    }

    /*
     * Gets the name of the role.
     * @return the name of the role.
     */
    public String getName() {
        return name;
    }

    /*
     * Sets the name of the role.
     * @param name the name to be set for the role.
     */
    public void setName(String name) {
        this.name = name;
    }

    /*
     * Gets the description of the role.
     * @return the description of the role.
     */
    public String getDescription() {
        return description;
    }

    /*
     * Sets the description of the role.
     * @param description the description to be set for the role.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /*
     * Returns a string representation of the Role object.
     * Includes the ID, name, and description fields.
     * @return a string representation of the Role object.
     */
    @Override
    public String toString() {
        return "Role [id=" + id + ", name=" + name + ", description=" + description + "]";
    }
}
